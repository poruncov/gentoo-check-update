#!/bin/zsh

unset TIMEFORMAT

check() {
    local COUNT OUTPUT LOG_FILE="/var/log/portage-update-check.log"
    local DATE=$(date '+%Y-%m-%d %H:%M:%S')
    
    # –¶–≤–µ—Ç–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    local RED='\033[1;31m'
    local GREEN='\033[1;32m'
    local YELLOW='\033[1;33m'
    local BLUE='\033[1;34m'
    local MAGENTA='\033[1;35m'
    local CYAN='\033[1;36m'
    local WHITE='\033[1;37m'
    local BOLD='\033[1m'
    local RESET='\033[0m'
    
    # –°–∏–º–≤–æ–ª—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    local CHECK_MARK="‚úÖ"
    local WARNING="‚ö†Ô∏è"
    local INFO="‚ÑπÔ∏è"
    local CLOCK="‚è±Ô∏è"
    local PACKAGE="üì¶"
    local ROCKET="üöÄ"
    local PARTY="üéâ"
    local GEAR="‚öôÔ∏è"
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
    separator() {
        echo -e "${MAGENTA}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    header() {
        echo -e "${BLUE}${BOLD}$1${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    success() {
        echo -e "${GREEN}${CHECK_MARK} $1${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    warning() {
        echo -e "${YELLOW}${WARNING} $1${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    info() {
        echo -e "${CYAN}${INFO} $1${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–∞–∫–µ—Ç–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏ emerge
    extract_package_name() {
        local line="$1"
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:
        # [ebuild N    ] net-fs/libnfs-5.0.3 USE-"-examples -static-libs -utils‚Ñ¢
        # [ebuild R J media-video/vlc-3.@.21_p20250217-r3_USE="nfs*"
        # [ebuild     U] app-admin/eselect-1.4.25 [1.4.24]
        echo "$line" | sed -E 's/^\[[^]]+\]\s+//' | sed -E 's/\s+USE=.*$//' | sed -E 's/\s+\[.*\]$//' | awk '{print $1}'
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ –ø–∞–∫–µ—Ç–∞ (–±–µ–∑ –≤–µ—Ä—Å–∏–∏)
    extract_package_base() {
        local pkg_full="$1"
        echo "$pkg_full" | sed -E 's/-[0-9][0-9a-zA-Z._@-]*([-+][0-9a-zA-Z._]+)*$//'
    }
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "$LOG_FILE" ]; then
        touch "$LOG_FILE" 2>/dev/null || sudo touch "$LOG_FILE" 2>/dev/null
        chmod 644 "$LOG_FILE" 2>/dev/null || sudo chmod 644 "$LOG_FILE" 2>/dev/null
    fi
    
    echo "[$DATE] –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π" | tee -a "$LOG_FILE" >/dev/null 2>&1
    
    separator
    header "${GEAR} –û–ë–ù–û–í–õ–ï–ù–ò–ï –ë–ê–ó–´ –ü–ê–ö–ï–¢–û–í"
    separator
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤—ã–≤–æ–¥–∞
    local TEMP_LOG=$(mktemp)
    
    echo -e "${CYAN}–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤...${RESET}"
    if command -v sudo >/dev/null 2>&1 && [ "$EUID" -ne 0 ]; then
        sudo eix-sync > "$TEMP_LOG" 2>&1
    else
        eix-sync > "$TEMP_LOG" 2>&1
    fi
    
    local SYNC_EXIT_CODE=$?
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤–µ—Å—å –≤—ã–≤–æ–¥
    if [ $SYNC_EXIT_CODE -ne 0 ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ eix-sync${RESET}" >&2
        echo "[$DATE] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ eix-sync" | tee -a "$LOG_FILE" >/dev/null 2>&1
        rm -f "$TEMP_LOG"
        return 1
    fi
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm -f "$TEMP_LOG"
    success "–ë–∞–∑–∞ –ø–∞–∫–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
    
    separator
    header "üîç –ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–ô"
    separator
    
    echo -e "${CYAN}–ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...${RESET}"
    if command -v sudo >/dev/null 2>&1 && [ "$EUID" -ne 0 ]; then
        OUTPUT=$(sudo emerge -pu --deep --newuse --changed-use @world 2>/dev/null)
    else
        OUTPUT=$(emerge -pu --deep --newuse --changed-use @world 2>/dev/null)
    fi
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π –≤—ã–≤–æ–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    local FULL_OUTPUT="$OUTPUT"
    
    # –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–¥—Å—á–µ—Ç –ø–∞–∫–µ—Ç–æ–≤ - —É—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –≤—ã–≤–æ–¥–∞
    COUNT=$(echo "$OUTPUT" | grep -E '^\[.*\]' | grep -v -E '^\[(blocks|update)' | wc -l)
    
    echo "[$DATE] –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $COUNT" | tee -a "$LOG_FILE" >/dev/null 2>&1
    
    if [ $COUNT -gt 0 ]; then
        separator

        echo -e "${YELLOW}${BOLD}–ù–∞–π–¥–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${COUNT}${RESET}"
        echo
        
        header "üìã –°–ü–ò–°–û–ö –ü–ê–ö–ï–¢–û–í:"
        local PACKAGE_LIST=""
        local counter=1
        
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ emerge –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
        while IFS= read -r line; do
            if [[ "$line" =~ ^\[.*\] ]]; then
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
                if [[ "$line" =~ ^\[(blocks|update) ]]; then
                    continue
                fi
                
                pkg_name=$(extract_package_name "$line")
                if [ -n "$pkg_name" ]; then
                    echo -e "  ${WHITE}${counter}. ${pkg_name}${RESET}"
                    PACKAGE_LIST="${PACKAGE_LIST}${pkg_name}\n"
                    counter=$((counter + 1))
                else
                    echo -e "  ${YELLOW}[–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞] ${line}${RESET}" >&2
                fi
            fi
        done <<< "$FULL_OUTPUT"
        
        # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç–æ–π, –ø–æ–∫–∞–∂–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
        if [ -z "$(echo -e "$PACKAGE_LIST" | tr -d '\n')" ]; then
            # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤
           echo "$FULL_OUTPUT" | grep -E '^\[.*\]' | grep -v -E '^\[(blocks|update)' | \
          while IFS= read -r line; do
                # –ü—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥ - –±–µ—Ä–µ–º –≤—Å–µ –ø–æ—Å–ª–µ ] –¥–æ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –∏–ª–∏ USE=
                simple_pkg=$(echo "$line" | sed -E 's/^\[[^]]+\]\s+//' | awk '{print $1}' | sed 's/USE=.*//')
                if [ -n "$simple_pkg" ]; then
                    echo -e "  ${WHITE}${counter}. ${simple_pkg}${RESET}"
                    PACKAGE_LIST="${PACKAGE_LIST}${simple_pkg}\n"
                    counter=$((counter + 1))
              fi
            done
        fi
        
        separator
        header "${CLOCK} –û–¶–ï–ù–ö–ê –í–†–ï–ú–ï–ù–ò –û–ë–ù–û–í–õ–ï–ù–ò–Ø"
        #separator
        
        local TOTAL_SECONDS=0
        local FOUND_COUNT=0
        
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        if [ -n "$PACKAGE_LIST" ]; then
            while IFS= read -r pkg_full; do
                [ -z "$pkg_full" ] && continue
                
                pkg_base=$(extract_package_base "$pkg_full")
                
                # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏ –∏–∑ qlop
                pkg_info=$(qlop "$pkg_base" 2>/dev/null | grep ">>> $pkg_base:" | tail -1)
                
                if [ -n "$pkg_info" ]; then
                    pkg_time=$(echo "$pkg_info" | sed -E 's/.*>>> [^:]+: //')
                    echo -e "  ${CYAN}${pkg_base}:${RESET} ${GREEN}${pkg_time}${RESET}"
                    
                    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥—ã
                    if [[ "$pkg_time" =~ ([0-9]+)\'([0-9]+)\" ]]; then
                        minutes=${match[1]}
                        seconds=${match[2]}
                        time_seconds=$((minutes * 60 + seconds))
                    elif [[ "$pkg_time" =~ ([0-9]+)s ]]; then
                        time_seconds=${match[1]}
                    elif [[ "$pkg_time" =~ ([0-9]+):([0-9]+) ]]; then
                        # –§–æ—Ä–º–∞—Ç MM:SS
                        minutes=${match[1]}
                        seconds=${match[2]}
                        time_seconds=$((minutes * 60 + seconds))
                    else
                        time_seconds=0
                    fi
                    
                    if [ $time_seconds -gt 0 ]; then
                        TOTAL_SECONDS=$((TOTAL_SECONDS + time_seconds))
                        FOUND_COUNT=$((FOUND_COUNT + 1))
                    fi
                else
                    echo -e "  ${CYAN}${pkg_base}:${RESET} ${YELLOW}–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö${RESET}"
                fi
            done <<< "$(echo -e "$PACKAGE_LIST")"
        else
            echo -e "  ${YELLOW}–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—Ä–µ–º–µ–Ω–∏${RESET}"
        fi
        
        separator
        
        if [ $FOUND_COUNT -gt 0 ]; then
            local AVG_TIME=$((TOTAL_SECONDS / FOUND_COUNT))
            local ESTIMATED_TOTAL=$((AVG_TIME * COUNT))
            
            echo -e "  ${WHITE}–ù–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö ${GREEN}${FOUND_COUNT}${WHITE} –∏–∑ ${GREEN}${COUNT}${WHITE} –ø–∞–∫–µ—Ç–æ–≤${RESET}"
            echo
            
            if [ $ESTIMATED_TOTAL -lt 300 ]; then
                success "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –º–µ–Ω–µ–µ 5 –º–∏–Ω—É—Ç ${ROCKET}"
                echo -e "  ${GREEN}–ú–æ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ä–∞–∑—É${RESET}"
            elif [ $ESTIMATED_TOTAL -lt 900 ]; then
                info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 5-15 –º–∏–Ω—É—Ç"
                echo -e "  ${CYAN}–ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞${RESET}"
            elif [ $ESTIMATED_TOTAL -lt 1800 ]; then
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 15-30 –º–∏–Ω—É—Ç"
                echo -e "  ${YELLOW}–ó–∞–π–º–∏—Ç–µ—Å—å –¥—Ä—É–≥–∏–º–∏ –¥–µ–ª–∞–º–∏${RESET}"
            elif [ $ESTIMATED_TOTAL -lt 3600 ]; then
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 30-60 –º–∏–Ω—É—Ç"
                echo -e "  ${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è${RESET}"
            else
                local hours=$((ESTIMATED_TOTAL / 3600))
                local minutes=$(( (ESTIMATED_TOTAL % 3600) / 60 ))
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ ${hours}—á ${minutes}–º"
                echo -e "  ${YELLOW}–õ—É—á—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è${RESET}"
            fi
        else
            # –†–µ–∑–µ—Ä–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–∞–∫–µ—Ç–æ–≤
            echo -e "  ${WHITE}–ù–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∞–∫–µ—Ç–æ–≤: ${GREEN}${COUNT}${RESET}"
            echo
            
            if [ $COUNT -le 3 ]; then
                success "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 5-15 –º–∏–Ω—É—Ç ${ROCKET}"
                echo -e "  ${GREEN}–ú–æ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ä–∞–∑—É${RESET}"
            elif [ $COUNT -le 8 ]; then
                info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 15-30 –º–∏–Ω—É—Ç"
                echo -e "  ${CYAN}–ü–æ–¥–æ–∂–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞${RESET}"
            elif [ $COUNT -le 15 ]; then
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 30-60 –º–∏–Ω—É—Ç"
                echo -e "  ${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è${RESET}"
            else
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –±–æ–ª–µ–µ 1 —á–∞—Å–∞"
                echo -e "  ${YELLOW}–õ—É—á—à–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è${RESET}"
            fi
        fi
        
        
        # –õ–æ–≥–∏—Ä—É–µ–º –ø–∞–∫–µ—Ç—ã
        echo "[$DATE] –ü–∞–∫–µ—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:" | tee -a "$LOG_FILE" >/dev/null 2>&1
        if [ -n "$PACKAGE_LIST" ]; then
            while IFS= read -r pkg; do
                [ -z "$pkg" ] && continue
                echo "  - $pkg" | tee -a "$LOG_FILE" >/dev/null 2>&1
            done <<< "$(echo -e "$PACKAGE_LIST")"
        else
            echo "  - –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤" | tee -a "$LOG_FILE" >/dev/null 2>&1
        fi
    else
        separator
        header "${PARTY} –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´"
        separator
        success "–°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–∫—Ç—É–∞–ª—å–Ω–∞!"
        echo
        echo -e "  ${GREEN}–í—Å–µ –ø–∞–∫–µ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–µ—Ä—Å–∏–π!${RESET}"
        echo -e "  ${CYAN}–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ ${CHECK_MARK}${RESET}"
    fi
    
    separator
    local END_DATE=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$END_DATE] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞" | tee -a "$LOG_FILE" >/dev/null 2>&1
}
