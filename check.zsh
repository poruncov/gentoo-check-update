#!/bin/zsh

unset TIMEFORMAT

check() {
    local COUNT OUTPUT LOG_FILE="/var/log/portage-update-check.log"
    local DATE=$(date '+%Y-%m-%d %H:%M:%S')
    
    # –¶–≤–µ—Ç–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    local RED='\033[1;31m'
    local GREEN='\033[1;32m'
    local YELLOW='\033[1;33m'
    local BLUE='\033[1;34m'
    local MAGENTA='\033[1;35m'
    local CYAN='\033[1;36m'
    local WHITE='\033[1;37m'
    local BOLD='\033[1m'
    local RESET='\033[0m'
    
    # –°–∏–º–≤–æ–ª—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    local CHECK_MARK="‚úÖ"
    local WARNING="‚ö†Ô∏è"
    local INFO="‚ÑπÔ∏è"
    local CLOCK="‚è±Ô∏è"
    local PACKAGE="üì¶"
    local ROCKET="üöÄ"
    local PARTY="üéâ"
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
    separator() {
        echo -e "${CYBOLD}${MAGENTA}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    header() {
        echo -e "${CYBOLD}${BLUE}$1${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    success() {
        echo -e "${GREEN}${CHECK_MARK} $1${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    warning() {
        echo -e "${YELLOW}${WARNING} $1${RESET}"
    }
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    info() {
        echo -e "${CYAN}${INFO} $1${RESET}"
    }
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "$LOG_FILE" ]; then
        touch "$LOG_FILE" 2>/dev/null || sudo touch "$LOG_FILE" 2>/dev/null
        chmod 644 "$LOG_FILE" 2>/dev/null || sudo chmod 644 "$LOG_FILE" 2>/dev/null
    fi
    
    echo "[$DATE] –ù–∞—á–∞–ª–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π" | tee -a "$LOG_FILE" >/dev/null 2>&1
    
    separator
    header "üîÑ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ë–ê–ó–´ –ü–ê–ö–ï–¢–û–í      "
    separator
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤—ã–≤–æ–¥–∞
    local TEMP_LOG=$(mktemp)
    
    if command -v sudo >/dev/null 2>&1 && [ "$EUID" -ne 0 ]; then
        sudo eix-sync > "$TEMP_LOG" 2>&1
    else
        eix-sync > "$TEMP_LOG" 2>&1
    fi
    
    local SYNC_EXIT_CODE=$?
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤–µ—Å—å –≤—ã–≤–æ–¥
    if [ $SYNC_EXIT_CODE -ne 0 ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ eix-sync${RESET}" >&2
        echo "[$DATE] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ eix-sync" | tee -a "$LOG_FILE" >/dev/null 2>&1
        rm -f "$TEMP_LOG"
        return 1
    fi
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm -f "$TEMP_LOG"
    success "–ë–∞–∑–∞ –ø–∞–∫–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞   "
    
    separator
    header "üîç –ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–ô     "
    separator
    
    if command -v sudo >/dev/null 2>&1 && [ "$EUID" -ne 0 ]; then
        OUTPUT=$(sudo emerge -pu --deep --newuse @world 2>/dev/null)
    else
        OUTPUT=$(emerge -pu --deep --newuse @world 2>/dev/null)
    fi
    
    COUNT=$(echo "$OUTPUT" | grep -c '^\[.*\] .*-.*\[')
    
    echo "[$DATE] –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $COUNT" | tee -a "$LOG_FILE" >/dev/null 2>&1
    
    if [ $COUNT -gt 0 ]; then
        separator
        header "${PACKAGE} –î–û–°–¢–£–ü–ù–´–ï –û–ë–ù–û–í–õ–ï–ù–ò–Ø"
        separator
        
        echo -e "${YELLOW}–ù–∞–π–¥–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${BOLD}${COUNT}${RESET}"
        echo
        
        header "üìã –°–ü–ò–°–û–ö –ü–ê–ö–ï–¢–û–í:"
        echo "$OUTPUT" | grep '^\[.*\]' | sed -E 's/^\[[^]]+\] //' | nl -w2 -s'. ' | while read -r line; do
            echo -e "  ${WHITE}${line}${RESET}"
        done
        
        separator
        header "${CLOCK} –û–¶–ï–ù–ö–ê –í–†–ï–ú–ï–ù–ò –û–ë–ù–û–í–õ–ï–ù–ò–Ø"
#        separator
        
        local TOTAL_SECONDS=0
        local FOUND_COUNT=0
        
        while IFS= read -r pkg_line; do
            pkg_full=$(echo "$pkg_line" | awk '{print $1}')
            pkg_base=$(echo "$pkg_full" | sed -E 's/-[0-9][0-9a-z._-]*$//')
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Å–±–æ—Ä–∫–∏ –∏–∑ qlop
            pkg_info=$(qlop "$pkg_base" 2>/dev/null | grep ">>> $pkg_base:" | tail -1)
            
            if [ -n "$pkg_info" ]; then
                pkg_time=$(echo "$pkg_info" | sed -E 's/.*>>> [^:]+: //')
                echo -e "  ${CYAN}${pkg_base}:${RESET} ${WHITE}${pkg_time}${RESET}"
                
                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥—ã
                if [[ "$pkg_time" =~ ([0-9]+)\'([0-9]+)\" ]]; then
                    minutes=${match[1]}
                    seconds=${match[2]}
                    time_seconds=$((minutes * 60 + seconds))
                elif [[ "$pkg_time" =~ ([0-9]+)s ]]; then
                    time_seconds=${match[1]}
                else
                    time_seconds=0
                fi
                
                if [ $time_seconds -gt 0 ]; then
                    TOTAL_SECONDS=$((TOTAL_SECONDS + time_seconds))
                    FOUND_COUNT=$((FOUND_COUNT + 1))
                fi
            else
                echo -e "  ${CYAN}${pkg_base}:${RESET} ${YELLOW}–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö${RESET}"
            fi
        done < <(echo "$OUTPUT" | grep '^\[.*\]' | sed -E 's/^\[[^]]+\] //')
        
#        separator
#        header "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø  "
        separator
        
        if [ $FOUND_COUNT -gt 0 ]; then
            local AVG_TIME=$((TOTAL_SECONDS / FOUND_COUNT))
            local ESTIMATED_TOTAL=$((AVG_TIME * COUNT))
            
            echo -e "  ${WHITE}–ù–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö ${GREEN}${FOUND_COUNT}${WHITE} –∏–∑ ${GREEN}${COUNT}${WHITE} –ø–∞–∫–µ—Ç–æ–≤${RESET}"
            echo
            
            if [ $ESTIMATED_TOTAL -lt 300 ]; then
                success "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –º–µ–Ω–µ–µ 5 –º–∏–Ω—É—Ç ${ROCKET}"
            elif [ $ESTIMATED_TOTAL -lt 900 ]; then
                info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 5-15 –º–∏–Ω—É—Ç"
            elif [ $ESTIMATED_TOTAL -lt 1800 ]; then
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 15-30 –º–∏–Ω—É—Ç"
            elif [ $ESTIMATED_TOTAL -lt 3600 ]; then
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 30-60 –º–∏–Ω—É—Ç"
            else
                local hours=$((ESTIMATED_TOTAL / 3600))
                local minutes=$(( (ESTIMATED_TOTAL % 3600) / 60 ))
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ ${hours}—á ${minutes}–º"
                echo -e "  ${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ${RESET}"
            fi
        else
            # –†–µ–∑–µ—Ä–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–∞–∫–µ—Ç–æ–≤
            if [ $COUNT -le 3 ]; then
                success "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 5-15 –º–∏–Ω—É—Ç ${ROCKET}"
            elif [ $COUNT -le 8 ]; then
                info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 15-30 –º–∏–Ω—É—Ç"
            elif [ $COUNT -le 15 ]; then
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 30-60 –º–∏–Ω—É—Ç"
            else
                warning "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç –±–æ–ª–µ–µ 1 —á–∞—Å–∞"
                echo -e "  ${YELLOW}–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ${RESET}"
            fi
        fi
        
        separator
#        info "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: ${WHITE}emerge -u @world${RESET}"
#        separator
        
        # –õ–æ–≥–∏—Ä—É–µ–º –ø–∞–∫–µ—Ç—ã
        echo "[$DATE] –ü–∞–∫–µ—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:" | tee -a "$LOG_FILE" >/dev/null 2>&1
        echo "$OUTPUT" | grep '^\[.*\]' | sed -E 's/^\[[^]]+\] //' | while read -r pkg; do
            echo "  - $pkg" | tee -a "$LOG_FILE" >/dev/null 2>&1
        done
    else
        separator
        header "${PARTY} –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´"
        separator
        success "–°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–∫—Ç—É–∞–ª—å–Ω–∞!"
        echo
        echo -e " ${GREEN}–í—Å–µ –ø–∞–∫–µ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–µ—Ä—Å–∏–π!${RESET}"
        separator
    fi
    
    local END_DATE=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$END_DATE] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞" | tee -a "$LOG_FILE" >/dev/null 2>&1
}
